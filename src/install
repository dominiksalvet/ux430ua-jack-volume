#!/bin/sh

#-------------------------------------------------------------------------------
# Copyright (C) 2017-2018 Dominik Salvet
# SPDX-License-Identifier: MIT
#-------------------------------------------------------------------------------
# PARAMETERS:
#   $1 - unnormalized installation directory path
#   $2 - the program metadata directory path
#-------------------------------------------------------------------------------


#-------------------------------------------------------------------------------
# SOFTWARE DEPENDENCIES
#-------------------------------------------------------------------------------

# list of required software
SW_REQUIRED='echo [ id dirname grep cat apt chmod sed ln'

# check if some software is missing
for i in $SW_REQUIRED; do
    # software is missing if at least one piece of software is missing
    if ! command -v "$i" > /dev/null; then
        echo "$0: Required software '$i' is missing, installation canceled." >&2
        exit 1
    fi
done

#-------------------------------------------------------------------------------
# DEFINITIONS
#-------------------------------------------------------------------------------

# normalize a path and remove the last slash
NORMALIZE_PATH='s|/\+|/|g;s|\([^/]*\)/*$|\1|'

# normalize the '$1' argument
INSTALL_DIR=$(echo "$1" | sed -e "$NORMALIZE_PATH")

# script directory path, expecting the 'src/' directory
SRC_DIR="$(dirname -- "$0")"

# read the program information from metadata
VERSION="$(cat "$2/version")"
HOME_URL="$(cat "$2/home-url")"

# scripts to insert metadata into the program's code
VERSION_APPLY='s|^\(VERSION=\)VERSION|\1'"'$VERSION'"'|'
HOME_URL_APPLY='s|^\(HOME_URL=\)HOME_URL|\1'"'$HOME_URL'"'|'

# regular expression of line containing a successful exit of a shell script
FIND_EXIT_0='^\s*exit\(\|\s\+0\+\)\(\s*\|\s\+#.*\)$'

#-------------------------------------------------------------------------------
# CHECK ENVIRONMENT
#-------------------------------------------------------------------------------

# check if running as root
if [ "$(id -u)" -ne 0 ]; then
    echo "$0: Please run as root, installation canceled." >&2
    exit 1
fi

# check if given installation directory path doesn't contain illegal characters
case "$INSTALL_DIR" in
    *\|*)
        echo "$0: '$INSTALL_DIR/' contains '|', installation canceled." >&2
        exit 1
        ;;
esac

# check if given installation directory exists
if [ ! -d "$INSTALL_DIR/" ]; then
    echo "$0: '$INSTALL_DIR/' doesn't exist, installation canceled." >&2
    exit 1
fi

# check if already installed
if [ -f "$INSTALL_DIR/ux430ua-jack-volume" ]; then
    echo "The program is already installed in '$INSTALL_DIR/', installation canceled."
    exit 0
fi

#-------------------------------------------------------------------------------
# FILE DEPENDENCIES
#-------------------------------------------------------------------------------

# check if ux430ua-jack-volume file exists
if [ ! -f "$SRC_DIR/ux430ua-jack-volume" ]; then
    echo "$0: '$SRC_DIR/ux430ua-jack-volume' does not exist, installation canceled." >&2
    exit 1
else
    # load ux430ua-jack-volume file content into variable
    ux430ua_jack_volume_string=$(cat "$SRC_DIR/ux430ua-jack-volume")

    # insert metadata into the program's code
    ux430ua_jack_volume_string=$(echo "$ux430ua_jack_volume_string" |
    sed -e "$VERSION_APPLY" -e "$HOME_URL_APPLY")
fi

# create '/etc/rc.local' if it does not exist
if [ ! -f /etc/rc.local ]; then
    echo '#!/bin/sh -e

exit 0' > /etc/rc.local
# append a successful exit if it does not contain one
elif ! grep -q -e "$FIND_EXIT_0" /etc/rc.local; then
    echo 'exit 0' >> /etc/rc.local
fi

# set the execution permission of '/etc/rc.local'
chmod a+x /etc/rc.local

#-------------------------------------------------------------------------------
# INSTALLATION
#-------------------------------------------------------------------------------

# install required package to control the sound volume
apt install alsa-tools -y || exit 1

# apply 3.5 mm jack output volume setup
echo "$ux430ua_jack_volume_string" > "$INSTALL_DIR/ux430ua-jack-volume"
chmod a+x "$INSTALL_DIR/ux430ua-jack-volume"
sed -i -e '0,/'"$FIND_EXIT_0"'/s||'"'$INSTALL_DIR"'/ux430ua-jack-volume'"'"'\n&|' /etc/rc.local
ln -s -- "$INSTALL_DIR/ux430ua-jack-volume" /lib/systemd/system-sleep/ux430ua-jack-volume

# apply the changes immediately
"$INSTALL_DIR"/ux430ua-jack-volume

# final message
echo 'Installation finished!'
